//
//  LoginViewController.swift
//  Sift
//
//  Created Денис Фролов on 25/01/2019.
//  Copyright © 2019 Denis Frolov. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class LoginViewController: UIViewController {
    
    // Constants
    //TODO need fixed
    let textFieldsBottomInset: CGFloat = 10
    let loginButtonHeight: CGFloat = 60
    let textHeight: CGFloat = 30
    let animationDuration = 0.3
    
    @IBOutlet weak var phoneTextField: txtFeildRoundRectWithShadow!
    @IBOutlet weak var textFieldsBottomConstraint: NSLayoutConstraint!
    
	var presenter: LoginPresenterProtocol!
    
    lazy var tapRecognizer: UITapGestureRecognizer = {
        var recognizer = UITapGestureRecognizer(target:self, action: #selector(dismissKeyboard))
        return recognizer
    }()

    // MARK: - Life Cycle
    
	override func viewDidLoad() {
        super.viewDidLoad()

    }
    
    override func viewWillAppear(_ animated: Bool) {
        addObserverKeyboardNotificatons()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        NotificationCenter.default.removeObserver(self, name: UIResponder.keyboardWillShowNotification, object: nil)
        NotificationCenter.default.removeObserver(self, name: UIResponder.keyboardWillHideNotification, object: nil)
    }
    
    
    // MARK: - Keyboard Notifications
    
    private func addObserverKeyboardNotificatons() {
        
        NotificationCenter.default.addObserver(forName: UIResponder.keyboardWillShowNotification,
                                               object: nil,
                                               queue: nil) { (notification) in
                                                self.view.addGestureRecognizer(self.tapRecognizer)
                                                guard let keyboardRect =  notification.userInfo?[UIResponder.keyboardFrameEndUserInfoKey] as? CGRect else { return }
                                                self.textFieldsBottomConstraint.constant = keyboardRect.size.height - (self.loginButtonHeight + self.textHeight + 28) + self.textFieldsBottomInset
                                                UIView.animate(withDuration: self.animationDuration, animations: {
                                                    self.view.layoutIfNeeded()
                                                })
        }
        
        NotificationCenter.default.addObserver(forName: UIResponder.keyboardWillHideNotification,
                                               object: nil,
                                               queue: nil) { (notification) in
                                                self.view.removeGestureRecognizer(self.tapRecognizer)
                                                self.textFieldsBottomConstraint.constant = self.textFieldsBottomInset
                                                UIView.animate(withDuration: self.animationDuration, animations: {
                                                    self.view.layoutIfNeeded()
                                                })
        }
    }
    
    // MARK: - Actions
    
    @IBAction func onLoginButton(_ sender: UIButton) {
        presenter.loginAction(phone: phoneTextField.text)
    }
    
    @objc func dismissKeyboard() {
        self.view.endEditing(true)
    }
    
}

// MARK: - UITextFieldDelegate

extension LoginViewController: UITextFieldDelegate {
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        dismissKeyboard()
        return true
    }
}

// MARK: - LoginViewProtocol

extension LoginViewController: LoginViewProtocol {
    
}

// MARK: - StoryboardInitiable

extension LoginViewController: StoryboardInitiable {}
